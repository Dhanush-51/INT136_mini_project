{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.4", "generated_at": "2025-03-14T13:50:45.386822Z", "invocation_id": "7ef08c69-d82d-4dae-843a-f00614bf0810", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:50:43.595610Z", "completed_at": "2025-03-14T13:50:43.605611Z"}, {"name": "execute", "started_at": "2025-03-14T13:50:43.607612Z", "completed_at": "2025-03-14T13:50:45.201050Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.7853093147277832, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb00de-0001-087f-0000-50e90002aeda"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.mini_project_dbt.nrr_grr", "compiled": true, "compiled_code": "\n\nWITH customer_first_purchase AS (\n    SELECT\n        customer_id,\n        MIN(transaction_date) AS first_purchase_date\n    FROM MINI_PROJECT_OUTPUT_DB.staging.staging_transactions_table  \n    GROUP BY customer_id\n),\nmonthly_revenue AS (\n    SELECT\n        DATE_TRUNC('month', t.transaction_date) AS month,\n        t.customer_id,\n        SUM(t.revenue) AS total_revenue,\n        CASE \n            WHEN DATE_TRUNC('month', t.transaction_date) = DATE_TRUNC('month', cfp.first_purchase_date) THEN 'new' \n            ELSE 'existing' \n        END AS customer_type\n    FROM MINI_PROJECT_OUTPUT_DB.staging.staging_transactions_table t\n    JOIN customer_first_purchase cfp ON t.customer_id = cfp.customer_id\n    GROUP BY month, t.customer_id, cfp.first_purchase_date\n),\nstarting_mrr AS (\n    SELECT\n        month,\n        SUM(CASE WHEN customer_type = 'existing' THEN total_revenue ELSE 0 END) AS starting_mrr,\n        SUM(CASE WHEN customer_type = 'new' THEN total_revenue ELSE 0 END) AS new_mrr\n    FROM monthly_revenue\n    WHERE month = (SELECT MIN(month) FROM monthly_revenue) \n    GROUP BY month\n),\nchurned_mrr AS (\n    SELECT\n        month,\n        SUM(CASE WHEN total_revenue < 0 THEN total_revenue ELSE 0 END) AS churned_mrr\n    FROM monthly_revenue\n    WHERE customer_type = 'existing' \n    GROUP BY month\n),\nexpansion_mrr AS (\n    SELECT\n        month,\n        SUM(CASE WHEN total_revenue > 0 THEN total_revenue ELSE 0 END) AS expansion_mrr\n    FROM monthly_revenue\n    WHERE customer_type = 'existing' \n    GROUP BY month\n),\nnrr_grr AS (\n    SELECT\n        m.month,\n        sm.starting_mrr,\n        COALESCE(cm.churned_mrr, 0) AS churned_mrr,\n        COALESCE(em.expansion_mrr, 0) AS expansion_mrr,\n        (sm.starting_mrr - COALESCE(cm.churned_mrr, 0)) AS grr,\n        (sm.starting_mrr + COALESCE(em.expansion_mrr, 0) - COALESCE(cm.churned_mrr, 0)) AS nrr\n    FROM (SELECT DISTINCT month FROM monthly_revenue) m\n    LEFT JOIN starting_mrr sm ON m.month = sm.month\n    LEFT JOIN churned_mrr cm ON m.month = cm.month\n    LEFT JOIN expansion_mrr em ON m.month = em.month\n)\nSELECT\n    n.month,\n    n.starting_mrr,\n    n.churned_mrr,\n    n.expansion_mrr,\n    (n.grr / NULLIF(n.starting_mrr, 0)) * 100 AS grr_percentage,\n    (n.nrr / NULLIF(n.starting_mrr, 0)) * 100 AS nrr_percentage\nFROM nrr_grr n\nORDER BY n.month", "relation_name": "MINI_PROJECT_OUTPUT_DB.transform.nrr_grr"}], "elapsed_time": 4.80141019821167, "args": {"log_path": "C:\\Users\\TottaraDhanush\\DBT\\mini_project_dbt\\logs", "version_check": true, "invocation_command": "dbt run -m nrr_grr", "defer": false, "select": ["nrr_grr"], "which": "run", "send_anonymous_usage_stats": true, "populate_cache": true, "log_level": "info", "printer_width": 80, "log_format": "default", "indirect_selection": "eager", "show_resource_report": false, "enable_legacy_logger": false, "profiles_dir": "C:\\Users\\TottaraDhanush\\.dbt", "cache_selected_only": false, "favor_state": false, "exclude": [], "log_level_file": "debug", "strict_mode": false, "partial_parse": true, "print": true, "project_dir": "C:\\Users\\TottaraDhanush\\DBT\\mini_project_dbt", "partial_parse_file_diff": true, "use_colors_file": true, "use_colors": true, "quiet": false, "log_format_file": "debug", "log_file_max_bytes": 10485760, "macro_debugging": false, "static_parser": true, "introspect": true, "warn_error_options": {"include": [], "exclude": []}, "write_json": true, "vars": {}}}